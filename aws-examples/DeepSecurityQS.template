{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "(0011) - This template deploys Trend Micro Deep Security into a VPC with a Multi-AZ Microsoft SQLSERVER RDS instance and an instance that will montior the EC2 and Deep Security APIs to ensure all instances in the VPC are protected.  **WARNING** This template uses images from the AWS Marketplace and an active subscription to either the hourly or BYOL Deep Security listings is required - Please see the Quick Start documentation for more details.  This template creates Amazon EC2 instances and related resources. You will be billed for the AWS resources used if you create a stack from this template.  ",
  "Parameters" : {
    "VPCCIDR" : {
      "Type" : "String",
      "Description" : "Enter the CIDR range to be used for the VPC",
      "Default"     : "10.0.0.0/16",
      "AllowedPattern" : "[0-9]+\\..+"
    },
   "DSMLicenseType" : {
     "Description" : "Deep Security Manager is available from the AWS Marketplace as a Bring Your Own License or hourly in 25, 50, 100 or 200 agent licenses.  Enter the number of agents to license or BYOL",
     "Type" : "String",
     "AllowedValues" : ["25","50","100","200", "BYOL"]  
   }, 
   "AllowSSH" : {
      "Type" : "String",
      "Description" : "Enter the CIDR range or IP address that NAT instances should accept SSH connections from.  This will also be used for inbound HTTPS requests to the external interface of the Deep Security Manager",
      "Default"     : "0.0.0.0/0",
      "AllowedPattern" : "[0-9]+\\..+"
    },
   "DSMAdminUser" : {
      "Type" : "String",
      "Default" : "admin", 
      "MinLength": "4",
      "MaxLength": "10",
      "Description" : "Username for the admin user of the Deep Security Manager", 
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "Username must be alphanumeric and between 4 and 10 characters"
    },
    "DSMAdminPass" : {
      "Type" : "String",
      "NoEcho" : "True", 
      "MinLength": "8", 
      "AllowedPattern" : "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
      "Description" : "Password for the admin user of the Deep Security Manager - Must be 8 characters and include upper and lowercase characters and at least 1 number",
      "ConstraintDescription" : "Password must be at least 8 characters long and include upper and lowercase characters and at least 1 number"
    },
   "RDSMasterUser" : {
      "Type" : "String",
      "Default" : "master", 
      "MinLength": "4",
      "MaxLength": "10",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "Description" : "Master username for the RDS MSSQL database",
      "Default" : "master",
      "ConstraintDescription" : "Username must be alphanumeric and between 4 and 10 characters"
    },
    "RDSMasterPass" : {
      "Type" : "String",
      "NoEcho" : "True",
      "MinLength": "7",
      "Description" : "Password used for the master user in the RDS MSSQL database",
      "ConstraintDescription" : "RDS Master Password must be at least 7 characters long"   
    },
    "NotificationEmail" : {
      "Type" : "String",
      "Description" : "Enter the email address to be notified when instances are found to be out of policy",
      "AllowedPattern" : "[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
      "ConstraintDescription" : "Must be a valid email address"
     
    }, 
    "KeyPair" : {
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "MinLength": "1",
      "Description" : "Key pair to use for instances to allow ssh access"
    },
    "PublicAZ1CIDR" : {
      "Type" : "String",
      "Description" : "Enter the CIDR range for the first public subnet",
      "Default"     : "10.0.1.0/24",
      "AllowedPattern" : "[0-9]+\\..+"
    }, 
     "PublicAZ2CIDR" : {
      "Type" : "String",
      "Description" : "Enter the CIDR range for the second public subnet",
      "Default"     : "10.0.2.0/24",
      "AllowedPattern" : "[0-9]+\\..+"
    }, 
     "PrivateAZ1CIDR" : {
      "Type" : "String",
      "Description" : "Enter the CIDR range for the first private subnet",
      "Default"     : "10.0.16.0/20",
      "AllowedPattern" : "[0-9]+\\..+"
    }, 
     "PrivateAZ2CIDR" : {
      "Type" : "String",
      "Description" : "Enter the CIDR range for the second private subnet",
      "Default"     : "10.0.32.0/20",
      "AllowedPattern" : "[0-9]+\\..+"
    }, 
    "NATInstanceType": {
       "Description" : "Instance type for the NAT Instances",
       "Type"        : "String",
       "Default"     : "t2.small",
       "AllowedValues" : ["t2.small","t2.medium"]
   	},
    "IRAZ1CIDR" : {
      "Type" : "String",
      "Description" : "Enter the CIDR range for the first incident responce subnet",
      "Default"     : "10.0.251.0/24",
      "AllowedPattern" : "[0-9]+\\..+"
    }, 
     "IRAZ2CIDR" : {
      "Type" : "String",
      "Description" : "Enter the CIDR range for the second incident responce subnet",
      "Default"     : "10.0.253.0/24",
      "AllowedPattern" : "[0-9]+\\..+"
    },
    "RDSInstanceType" : {
      "Default" : "db.m3.large",
      "Description" : "MSSQL RDS Instance Size",
      "Type" : "String",
      "AllowedValues" : [ "db.m3.large","db.m3.xlarge","db.m3.2xlarge" ],
      "ConstraintDescription" : "RDS Insance Type must be db.m3.large, db.m3.xlarge or db.m3.2xlarge"
    },


    "RequireAV" : {
      "Type" : "String",
      "AllowedValues" : [ "Y", "N" ],
      "Default" : "Y", 
      "Description" : "Require instances to have the Deep Security AV module enbled",
      "ConstraintDescription" : "Input must be either Y or N"
    },
    "RequireDPI" : {
      "Type" : "String",
      "AllowedValues" : [ "Y", "N" ],
      "Default" : "Y", 
      "Description" : "Require instances to have the Deep Security Deep Packet Inspection module enbled",
      "ConstraintDescription" : "Input must be either Y or N"
    },
    "RequireDPIProtect" : {
      "Type" : "String",
      "AllowedValues" : [ "Y", "N" ],
      "Default" : "Y", 
      "Description" : "Require instances to have the Deep Security Deep Packet Inspection module in Protect mode rather than detect",
      "ConstraintDescription" : "Input must be either Y or N"
    },
    "RequireFW" : {
      "Type" : "String",
      "AllowedValues" : [ "Y", "N" ],
      "Default" : "Y", 
      "Description" : "Require instances to have the Deep Security Firewall module enbled",
      "ConstraintDescription" : "Input must be either Y or N"
    },
    "RequireFIM" : {
      "Type" : "String",
      "AllowedValues" : [ "Y", "N" ],
      "Default" : "N", 
      "Description" : "Require instances to have the Deep Security File Integrity Monitoring module enbled",
      "ConstraintDescription" : "Input must be either Y or N"
    },
    "RequireLog" : {
      "Type" : "String",
      "AllowedValues" : [ "Y", "N" ],
      "Default" : "N", 
      "Description" : "Require instances to have the Deep Security Log Inspection module enbled",
      "ConstraintDescription" : "Input must be either Y or N"
    },
    "EnforceMode" : {
      "Type" : "String",
      "AllowedValues" : [ "Y", "N" ],
      "Default" : "N", 
      "Description" : "Determines if enforcement is enabled, when set to yes instances out of complaince will be isolated into an incident responce subnet",
      "ConstraintDescription" : "Input must be either Y or N"
    },
    "EnableRedediation" : {
      "Type" : "String",
      "AllowedValues" : [ "Y", "N" ],
      "Default" : "Y", 
      "Description" : "If enabled the isolation security group will be modified to allow inbound traffic on TCP/4118 from the DSM and outbound traffic on TCP/443, TCP/4119-4120 and TCP/4122 to the DSM on non-IR interfaces",
      "ConstraintDescription" : "Input must be either Y or N"
    }, 
    "ExemptTag" : {
      "Type" : "String",
      "Description" : "Instances with this tag will be excempt from enformcent if they are out of complaince",
      "Default" : "CriticalAsset"     
    },
    "ExemptTagValue" : {
      "Type" : "String",
      "Description" : "The value an instance must have in the Exempt Tag to be exempt from enforment.",
      "Default" : "True"     
    }

   },
   
 "Resources" : {
    "InfraStack" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : "https://s3.amazonaws.com/quickstart-reference/trendmicro/deepsecurity/latest/templates/Infrastructure.template",
        "TimeoutInMinutes" : "30",
        "Parameters" : {
          "VPCCIDR" : {"Ref" : "VPCCIDR"},
          "PublicAZ1CIDR" : {"Ref" : "PublicAZ1CIDR"},
          "PublicAZ2CIDR" : {"Ref" : "PublicAZ2CIDR"},
          "PrivateAZ1CIDR" : {"Ref" : "PrivateAZ1CIDR"},
          "PrivateAZ2CIDR" : {"Ref" : "PrivateAZ2CIDR"},
          "NATInstanceType" : {"Ref" : "NATInstanceType"},
          "KeyPair" : {"Ref" : "KeyPair"},
          "ExemptTag" : {"Ref" : "ExemptTag" }, 
          "ExemptTagValue" : {"Ref" : "ExemptTagValue" },
          "AllowSSH" : {"Ref" : "AllowSSH"}
          }         
        }
      },

      "DSMStack" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : "https://s3.amazonaws.com/quickstart-reference/trendmicro/deepsecurity/latest/templates/DeepSecurityManager.template",
        "TimeoutInMinutes" : "40",
        "Parameters" : {
          "VPCCIDR" : {"Ref" : "VPCCIDR"},
          "VPCID" : { "Fn::GetAtt" : [ "InfraStack", "Outputs.VPCID" ] },
          "AllowSSH" :  { "Fn::GetAtt" : [ "InfraStack", "Outputs.NATSecurityGroup" ] },
          "AllowHTTPS": {"Ref" : "AllowSSH"},
          "IRAZ1CIDR" : {"Ref" : "IRAZ1CIDR"},
          "IRAZ2CIDR" : {"Ref" : "IRAZ2CIDR"},
          "PrivateSubnet1" : { "Fn::GetAtt" : [ "InfraStack", "Outputs.PrivateSubnet1" ] },
          "PublicSubnet1" : { "Fn::GetAtt" : [ "InfraStack", "Outputs.PublicSubnet1" ] },
          "PublicSubnet2" : { "Fn::GetAtt" : [ "InfraStack", "Outputs.PublicSubnet2" ] },
          "PrivateSubnet2" : { "Fn::GetAtt" : [ "InfraStack", "Outputs.PrivateSubnet2" ] },
          "RDSInstanceType" : {"Ref" : "RDSInstanceType"},
          "DSMAdminUser" : {"Ref" : "DSMAdminUser"},
          "DSMAdminPass" : {"Ref" : "DSMAdminPass"},
          "RDSMasterUser" : {"Ref" : "RDSMasterUser"},
          "RDSMasterPass" : {"Ref" : "RDSMasterPass"},
          "RequireAV" : {"Ref" : "RequireAV"},
          "RequireDPI" : {"Ref" : "RequireDPI"},
          "RequireDPIProtect" : {"Ref" : "RequireDPIProtect"},
          "RequireFW" : {"Ref" : "RequireFW"},
          "RequireFIM" : {"Ref" : "RequireFIM"},
          "RequireLog" : {"Ref" : "RequireLog"},
          "EnforceMode" : {"Ref" : "EnforceMode" }, 
          "ExemptTag" : {"Ref" : "ExemptTag" }, 
          "ExemptTagValue" : {"Ref" : "ExemptTagValue" },
          "DSMLicenseType" : {"Ref" : "DSMLicenseType" }, 
          "NotificationEmail" : {"Ref" : "NotificationEmail"},
          "EnableRedediation" : {"Ref" : "EnableRedediation"  },  
          "KeyPair" : {"Ref" : "KeyPair"}
          
          }         
        }
      }
 }, 
 "Outputs" : {
   "DSMURL": {"Description" : "URL to the Deep Security Manager", "Value": { "Fn::GetAtt" : [ "DSMStack", "Outputs.DSMURL" ] } },
   "IRHOSTAZ1" : {"Description" : "Incident Responce host for AZ1", "Value" : { "Fn::GetAtt" : ["DSMStack", "Outputs.IRHOSTAZ1"]  }  },
   "IRHOSTAZ2" : {"Description" : "Incident Responce host for AZ2", "Value" : { "Fn::GetAtt" : ["DSMStack", "Outputs.IRHOSTAZ2"]  }  }
   
   
   }    
   
} 